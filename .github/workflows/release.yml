# Creates a GitHub Release.
# Workflow is manually run.
# Preselect branch or tag before running this workflow.
name: release

on:
  workflow_dispatch:
    inputs:
      prerelease:
        description: "Mark this release as a prerelease"
        required: false
        default: "auto"
        type: choice
        # auto follows semver. Prerelease versions are hyphenated with a label. ex. 0.0.0-alpha, 1.0.0-rc1
        options:
          - auto
          - "true"
          - "false"
      make-latest:
        description: "Latest release"
        required: false
        default: true
        type: boolean

permissions:
  contents: write
  id-token: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      DOCKER_CLI_EXPERIMENTAL: "enabled"
    strategy:
      matrix:
        release_os:
          - linux
          - darwin
          - freebsd
          - illumos
          - netbsd
          - openbsd
          - solaris
          - windows
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.7
        with:
          fetch-depth: 0 # Required by GoRelease

      - name: Golang Setup
        uses: actions/setup-go@v5
        with:
          go-version: stable
          check-latest: true

      - name: go-check
        run: go version

      # Supports syft/sbom generation
      - uses: anchore/sbom-action/download-syft@v0

        # Supports Buildx
      - name: Qemu Setup
        uses: docker/setup-qemu-action@v3

      - name: Buildx Setup
        uses: docker/setup-buildx-action@v3

      - name: Cosign Install
        uses: sigstore/cosign-installer@v3

      - name: Cache Setup
        uses: actions/cache@v4
        with:
          path: |
            ./dist/**/bao
            ./dist/**/*.exe
            ./dist/**/*.deb
            ./dist/**/*.rpm
            ./dist/*.tar.gz
            ./dist/*.tar.gz.zst
            ./dist/*.zip
          key: ${{ github.ref }}

      - name: "Template GoRelaser configuration"
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          sed "s/REPLACE_WITH_RELEASE_GOOS/${{ matrix.release_os }}/g" .goreleaser-template.yaml > .goreleaser.yaml
          [ "${{ matrix.release_os }}" == "linux" ] && sed -i "s/^#LINUXONLY#//g" .goreleaser.yaml || true

      - name: "GoReleaser: Release"
        if: startsWith(github.ref, 'refs/tags/')
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: latest
          args: release --clean --timeout=60m --verbose --parallelism 2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_RELEASE_PRERELEASE: ${{ inputs.prerelease }}
          GITHUB_RELEASE_MAKE_LATEST: ${{ inputs.make-latest }}

      - name: "Check free space on runner"
        run: |
          df -h .
