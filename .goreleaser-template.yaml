# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com

# The lines below are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/need to use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj

project_name: bao

before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy
    # you may remove this if you don't need go generate
    - go generate ./...
    - make bootstrap

# Cannot have replace directives in the go modules.
#gomod:
#  proxy: true
#  env:
#    - GOPROXY=https://proxy.golang.org,direct
#    - GOSUMDB=sum.golang.org

builds:
  - id: builds-linux
    ldflags:
      - -X github.com/openbao/openbao/version.fullVersion={{.Version}} -X github.com/openbao/openbao/version.GitCommit={{.Commit}} -X github.com/openbao/openbao/version.BuildDate={{ .Date }}
    env:
      - CGO_ENABLED=0
    goos:
      - REPLACE_WITH_RELEASE_GOOS
    goarch:
      - amd64
      - arm
      - arm64
      - ppc64le
      - riscv64
      - s390x
    goarm:
      - "6"
    ignore:
      - goos: darwin
      - goos: dragonfly
      - goos: freebsd
      - goos: illumos
      - goos: netbsd
      - goos: openbsd
      - goos: solaris
      - goos: wasip1
      - goos: windows
    mod_timestamp: "{{ .CommitTimestamp }}"
    skip: false
  - id: builds-other
    ldflags:
      - -X github.com/openbao/openbao/version.fullVersion={{.Version}} -X github.com/openbao/openbao/version.GitCommit={{.Commit}} -X github.com/openbao/openbao/version.BuildDate={{ .Date }}
    env:
      - CGO_ENABLED=0
    goos:
      - REPLACE_WITH_RELEASE_GOOS
    goarch:
      - amd64
      - arm
      - arm64
      #- ppc64le
      - riscv64
      #- s390x
      #- wasm
    goarm:
      - "6"
      - "7"
    ignore:
      - goos: linux
      - goos: darwin
        goarm: "6"
      - goos: darwin
        goarch: arm
      - goos: darwin
        goarch: ppc64le
      - goos: darwin
        goarch: riscv64
      - goos: darwin
        goarch: s390x
      - goos: darwin
        goarch: wasm
      - goos: dragonfly
        goarch: arm
      - goos: dragonfly
        goarch: arm64
      - goos: dragonfly
        goarch: riscv64
      - goos: dragonfly
        goarch: wasm
      - goos: freebsd
        goarm: "7"
      - goos: freebsd
        goarch: ppc64le
      - goos: freebsd
        goarch: s390x
      - goos: freebsd
        goarch: wasm
      - goos: illumos
        goarch: arm
      - goos: illumos
        goarch: arm64
      - goos: illumos
        goarch: ppc64le
      - goos: illumos
        goarch: s390x
      - goos: illumos
        goarch: wasm
      - goos: netbsd
        goarch: ppc64le
      - goos: netbsd
        goarch: riscv64
      - goos: netbsd
        goarch: s390x
      - goos: netbsd
        goarch: wasm
      - goos: netbsd
        goarm: "7"
      - goos: openbsd
        goarch: ppc64le
      - goos: openbsd
        goarch: riscv64
      - goos: openbsd
        goarch: s390x
      - goos: openbsd
        goarch: wasm
      - goos: openbsd
        goarm: "7"
      - goos: solaris
        goarch: arm
      - goos: solaris
        goarch: arm64
      - goos: solaris
        goarch: ppc64le
      - goos: solaris
        goarch: s390x
      - goos: solaris
        goarch: wasm
      - goos: wasip1
        goarch: amd64
      - goos: wasip1
        goarch: arm
      - goos: wasip1
        goarch: arm64
      - goos: wasip1
        goarch: riscv64
      - goos: windows
        goarch: arm
        goarm: "7"
      - goos: windows
        goarch: ppc64le
      - goos: windows
        goarch: riscv64
      - goos: windows
        goarch: s390x
      - goos: windows
        goarch: wasm
    mod_timestamp: "{{ .CommitTimestamp }}"
    skip: false

report_sizes: true

nfpms:
  - vendor: OpenBao
    homepage: https://openbao.org
    maintainer: OpenBao <openbao@lists.lfedge.org>
    description: |
      OpenBao exists to provide a software solution to manage, store, and distribute
      sensitive data including secrets, certificates, and keys.
    license: MPL-2.0
    formats:
      # - apk
      - deb
      - rpm
      - archlinux
    dependencies:
      - openssl
    provides:
      - bao
    bindir: /usr/bin
    section: default
    contents:
      - src: ./LICENSE
        dst: /usr/share/doc/openbao/copyright
        file_info:
          mode: 0644
      - src: ./.release/linux/package/etc/openbao/openbao.env
        dst: /etc/openbao/openbao.env
        file_info:
          mode: 0644
      - src: ./.release/linux/package/etc/openbao/openbao.hcl
        dst: /etc/openbao/openbao.hcl
        file_info:
          mode: 0644
      - src: ./.release/linux/package/usr/lib/systemd/system/openbao.service
        dst: /usr/lib/systemd/system/openbao.service
        file_info:
          mode: 0644
    scripts:
      preinstall: ".release/linux/preinst"
      postinstall: ".release/linux/postinst"
      postremove: ".release/linux/postrm"
    overrides:
      deb:
        dependencies:
          - openssl
      rpm:
        dependencies:
          - openssl
      archlinux:
        dependencies:
          - openssl

checksum:
  name_template: "checksums.txt"
  disable: false
  # split: false

#snapcrafts:
#  - name: openbao
#    title: OpenBao
#    publish: false
#    summary: OpenBao is an open governance secrets management platform.
#    description: |
#      OpenBao exists to provide a software solution to manage, store, and distribute
#      sensitive data including secrets, certificates, and keys.
#    grade: devel
#    license: MPL-2.0
#    # Use the latest LTS version
#    base: core22
#    extra_files:
#      - source: ./LICENSE
#        destination: LICENSE.txt
#        mode: 0444
#    apps:
#      bao:
#        command: bao
#        aliases:
#          - bao

archives:
  - format: tar.gz
    # this name template makes the OS and Arch compatible with the results of `uname`.
    name_template: >-
      {{ .ProjectName }}_{{ .Version }}_{{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
      - goos: windows
        format: zip
    builds_info:
      group: root
      owner: root
      mode: 0755
      # format is `time.RFC3339Nano`
      mtime: 2008-01-02T15:04:05Z

#source:
#  enabled: true

sboms:
  - artifacts: archive
  - id: binary
    artifacts: binary
  - id: package
    artifacts: package

changelog:
  use: github
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"

release:
  github:
    owner: openbao
    name: openbao

  prerelease: ${{ .Env.GITHUB_PRERELEASE }}
  make_latest: ${{ .Env.GITHUB_RELEASE_MAKE_LATEST }}
  disable: false

  # We overwrite the following variables to support multi-stage execution of
  # goreleaser on the same artifacts with different GOOS values, to avoid
  # running out of disk space.
  draft: true
  replace_existing_draft: false
  replace_existing_artifacts: false
